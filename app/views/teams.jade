#confirmTeamModal.modal.fade(tabindex='-1',
role='dialog',
aria-labelledby='confirmTeamModalLabel',
aria-hidden='true')
	.modal-dialog
		.modal-content
			.modal-header
				button.close(type='button', data-dismiss='modal')
					span(aria-hidden='true') ×
					span.sr-only Close
				h4#confirmTeamModalLabel.modal-title {{ui.teamup.confirms.deleteTeamTitle}}
			.modal-body
				| {{ui.teamup.confirms.deleteTeam}}
			.modal-footer
				button.btn.btn-default(type='button',
				data-dismiss='modal') {{ui.teamup.confirms.cancel}}
				button.btn.btn-primary(type='button',
				ng-click='deleteTeam()') {{ui.teamup.confirms.remove}}

#confirmMemberModal.modal.fade(tabindex='-1',
role='dialog',
aria-labelledby='confirmMemberModalLabel',
aria-hidden='true')
	.modal-dialog
		.modal-content
			.modal-header
				button.close(type='button', data-dismiss='modal')
					span(aria-hidden='true') ×
					span.sr-only Close
				h4#confirmMemberModalLabel.modal-title {{ui.teamup.confirms.deleteMemberTitle}}
			.modal-body
				| {{ui.teamup.confirms.deleteMember}}
			.modal-footer
				button.btn.btn-default(type='button',
				data-dismiss='modal') {{ui.teamup.confirms.cancel}}
				button.btn.btn-primary(type='button',
				ng-click='deleteMember(currentMember)') {{ui.teamup.confirms.remove}}

.page-header
	h2.nullable {{ui.teamup.teams}}
	.selectGroup(
		ng-show='app.resources.role == 1 && views.team || views.newMember')
		span.selectTitle
			| {{ ui.teamup.selectTeam }}
		select(current_selection='team', 
		ng-model='current',
		ng-options='t.uuid as t.name for t in teams | orderBy:"name"',
		ng-selected='current',
		ng-change='requestTeam(current)')


.tabbable.tabs-left

	ul.nav.nav-tabs.nav-tabs-app(style='margin-right: 0px;')

		li(class="{{(views.team==true) && 'active'}}")
			a(data-toggle='tab',
			ng-click='setViewTo("team")')
				span.icomoon(data-icon='',
				aria-hidden='true')
				| {{ui.teamup.teams}}

		li(class="{{(views.newTeam==true) && 'active'}}",
		ng-show="app.resources.role == 1")
			a(data-toggle='tab',
			ng-click='setViewTo("newTeam")')
				span.icomoon(data-icon='',
				aria-hidden='true')
				| {{ui.teamup.newTeam}}

		li(class="{{(views.newMember==true) && 'active'}}",
		ng-show="app.resources.role == 1")
			a(data-toggle='tab',
			ng-click='setViewTo("newMember")')
				span.icomoon(data-icon='',
				aria-hidden='true')
				| {{ui.teamup.newMember}}

	.tab-content

		#viewTeamTab.tab-pane(class="{{(views.team==true) && 'active'}}")

			.tab-header(ng-hide='views.editTeam')
				h3.pull-left {{team.name}}
				h4.pull-left(ng-show='(team.phone != "" && team.phone != null)') ({{team.phone}})
				div(ng-show='app.resources.role == 1')
					button.btn.pull-right.btn-info.marginLeftTen(type='button',
					ng-click='confirmDeleteTeam()') {{ui.teamup.del}}
					button.btn.pull-right.btn-info(type='button',
					ng-click='editTeam(team)') {{ui.teamup.edit}}

			.tab-header(ng-show='views.editTeam')
				input.pull-left(type='text',
				ng-model='teamEditForm.name')
				button.btn.pull-right.btn-info.marginLeftTen(type='reset',
				ng-click='cancelTeamEdit(team)') {{ui.teamup.cancel}}
				button.btn.pull-right.btn-info.marginLeftTen(type='button',
				ng-click='changeTeam(teamEditForm)') {{ui.teamup.save}}

			hr

			p(ng-hide='(data.members[team.uuid]).length > 0') {{ui.teamup.noMembers}}

			div(ng-show='(data.members[team.uuid]).length > 0')
				table.table.table-striped.teamsTable
					thead
						tr
							th
							th: a(ng-click='sorter="name"') {{ui.teamup.name}}
							th: a {{ui.teamup.states}}
							th
					tbody
						tr(ng-repeat='member in data.members[team.uuid] | orderBy:"lastName"')
							td
								.roundedPicSmall(class='{{member.states|stateColor}}',
								back-img = '{{member.uuid | avatar:"team":"80" }}')
							td
								a(href='#/profile/{{member.uuid|lowercase}}#profile',
								ng-click='editProfile(member.uuid,team.uuid)') {{member.firstName}} {{member.lastName}}
							td
								span.states(ng-show='noSharedStates(member.states)') {{ui.teamup.noSharedStates}}
								dl.states(ng-repeat='state in member.states | filter:share=true ')
									span.stateIcon(data-icon='{{state.name|stateDataIcon:"data_icon"}}',
									aria-hidden='true',
									class="{{state.name|stateDataIcon:'class_name'}}")
									span.stateValue(ng-show='(state.name == "Location")') {{[member.address.street, member.address.no, member.address.zip, member.address.city] | commaSeperated}}
									span.stateValue(ng-show='(state.name == "Availability" || state.name == "Reachability")') {{state.value | i18n_spec:'teamup.stateValue'}}
										a(ng-show='(state.name == "Location")',
										href='http://maps.google.com/?q={{member.address.latitude}},{{member.address.longitude}}')  {{ui.teamup.map}}
							td
								.pull-right
									a(href='#/profile/{{member.uuid}}#edit',
									ng-click='editProfile(member.uuid,team.uuid)',
									ng-show='app.resources.role == 1 || app.resources.uuid == member.uuid')
										button.btn-primary.btn-mini
											i.icon-edit
									button.btn-primary.btn-mini(type='submit',
									ng-click='confirmDeleteMember(member)',
									ng-show='app.resources.role == 1')
										i.icon-trash
				ul#teams-legenda
					li
						div(class='roundedPicxSmall memberStateNone')
						p {{ ui.teamup.noSharedStates }}
					li
						div(class='roundedPicxSmall memberStateBusy')
						p {{ ui.teamup.stateValue.unavailable }}
					li
						div(class='roundedPicxSmall memberStateAvailalbe')
						p {{ ui.teamup.stateValue.reachable }}
				span.muted.pull-right
					small
						i {{(data.members[team.uuid]|filter:filtered).length | i18n_spec:'groups.memberCount'}}

		#newTeamTab.tab-pane(class="{{(views.newTeam==true) && 'active'}}")
			.tab-header
				h3.pull-left {{ui.teamup.newTeam}}
			hr
			form.form
				.control-group
					input.input-xlarge.search-query.controls(type='text',
					placeholder='{{ui.teamup.teamName}}',
					ng-model='teamForm.name')
				.control-group
					button.btn.btn-success.confirmButton.controls(type='button',
					ng-click='teamSubmit(teamForm)') {{ui.teamup.createTeam}}

		#newMemberTab.tab-pane(class="{{(views.newMember==true) && 'active'}}")
			.tab-header
				h3.pull-left {{ui.teamup.newMember}}
				div.btn-group.pull-right
					button.btn.btn-primary(class='{{(userType == "NEW") && "active"}}'
						ng-click='setUserType("NEW")')
						| Nieuw
					button.btn.btn-primary(class='{{(userType == "EXISTING") && "active"}}',
						ng-click='setUserType("EXISTING")')
						| Bestaand
			hr
			div(ng-show='userType == "EXISTING"')
				p(ng-hide='membersWithoutTeam.length > 0') {{ui.teamup.noMembers}}
				table.table.table-striped
					thead
						tr
							th
							th {{ui.teamup.name}}
							th {{ui.teamup.email}}
					tbody
						tr(ng-repeat='member in membersWithoutTeam | orderBy:"lastName"')
							td
								.roundedPicSmall(class='{{member.states|stateColor}}',
								back-img = '{{member.uuid | avatar:"team":"80" }}')
							td
								a(href='index.html#/profile/{{member.uuid}}#profile')
									| {{member.firstName}} {{member.lastName}}
							td
								| {{member.email}}
							td
								.pull-right
									button.btn-primary.btn-mini(ng-click='addExistingUserMember(member)')
										span.icomoon(data-icon='',
										aria-hidden='true')
				span.muted.pull-right
					small
						i {{membersWithoutTeam.length | i18n_spec:'groups.memberCount'}}
			
			form(name='teamMemberForm',
				novalidate,
				ng-show='(userType == "NEW")')
				fieldset
					.row
						.span6
							fieldset
								.form-group
									label.control-label {{ui.profile.firstName}}
									.controls
										input.span4(type='text',
										ng-model='memberForm.firstName')
								.form-group
									label.control-label {{ui.profile.lastName}}
									.controls
										input.span4(type='text',
										ng-model='memberForm.lastName')
								.form-group
									label.control-label {{ui.teamup.role}}
									.controls
										select(ng-model='memberForm.role',
										ng-options='r.id as r.label for r in roles')
											option(value='') {{ui.teamup.chooseRole}}
								.form-group(ng-class="{ 'has-error' : teamMemberForm.email.$invalid && !teamMemberForm.email.$pristine }")
									label.control-label E-mail
									.controls
										input.span3.form-control(type='email',
										name='email',
										required,
										ng-model='memberForm.email')
										span.help-block(ng-show='teamMemberForm.email.$invalid && !teamMemberForm.email.$pristine')
											small(ng-show="teamMemberForm.$error.email")
												i
												| {{ ui.validation.email.notValid }}
								.form-group(ng-class="{'has-error': phoneNumberParsed.result == false}")
									label.control-label {{ui.teamup.phone}}
									.controls
										input.span3.form-control.inputPhoneNumber(type='text',
										ng-model='memberForm.phone',
										ng-change='parsePhoneNumber(memberForm.phone); changePinToPhone()')
										span.help-block
											small
												i {{phoneNumberParsed.message}}
								//.form-group
								//	label.control-label {{ui.teamup.func}}
								//	.controls
								//		select(ng-model='memberForm.function',
								//		ng-options='f.id as f.label for f in mfuncs')
								//			option(value='') {{ui.teamup.chooseFunction}}
						.span6
							fieldset
								.form-group.dater(ng-class="{ 'has-error' : teamMemberForm.birthdate.$invalid && !teamMemberForm.birthdate.$pristine }")
									label.control-label {{ui.profile.birthday}}
									.controls
										input.form-control(
										type='text',
										name='birthdate',
										required,
										ng-model="memberForm.birthDate",
										data-date-type='string',
										data-date-format='dd-MM-yyyy',
										bs-datepicker='')
										i.icon-calendar
										p.text-danger(ng-show='teamMemberForm.birthdate.$invalid && !teamMemberForm.birthdate.$pristine')
											small
												i {{ui.validation.birthDate.notValid }}
										span.help-block(style='margin-top: -5px;')
											small
												i {{ui.profile.exampleBirthDate}}
												
								.form-group
									label.control-label {{ui.profile.username}}
									.controls
										input.span3(type='text', ng-blur="convertUserName()"
										ng-model='memberForm.userName')
								.form-group(ng-class="{ 'has-error' : teamMemberForm.password.$invalid && !teamMemberForm.password.$pristine }")
									label.control-label {{ui.profile.password}}
									.controls
										input.span3.form-control(type='password',
										ng-model='memberForm.password',
										name='password',
										required,
										ng-minlength="8",
										ng-maxlength="20")
										span.help-block(ng-show='teamMemberForm.password.$invalid && !teamMemberForm.password.$pristine')
											small
												i
												| {{ ui.validation.password.required }}
											small(ng-show="teamMemberForm.password.$error.minlength")
												i 
												| {{ ui.validation.password.amountMinChars(8) }} 
											small(ng-show="teamMemberForm.password.$error.maxlength")
												i 
												| {{ ui.validation.password.amountMaxChars(20) }}
												
								.form-group
									label.control-label {{ui.profile.retypePassword}}
									.controls
										input.span3(type='password',
										ng-model='memberForm.reTypePassword')
										
								.form-group(
									ng-class="{ 'has-error' : teamMemberForm.pincode.$invalid && !teamMemberForm.pincode.$pristine }")
									label.control-label {{ui.profile.pincode}}
									.controls
										input.span2.form-control(type='text',
										ng-model='memberForm.pincode',
										ui-mask='9999?9999',
										ng-change='pincodeExists(memberForm.pincode)',
										name='pincode')
										p.text-danger(ng-hide='pincodeExistsValidation')
											small
												i {{pincodeExistsValidationMessage}}
										span.help-block(style='margin-top: -5px;')
											small
												i {{ui.profile.pincodeInfo}}
					hr
					.form-actions
						button.btn.btn-success(type='submit',
						ng-click='memberSubmit(memberForm)') {{ui.teamup.saveMember}}
